//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServicesTest.TypeCarsWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="typecars", Namespace="http://schemas.datacontract.org/2004/07/wcf_fullcarwash")]
    [System.SerializableAttribute()]
    public partial class typecars : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typecarField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string typecar {
            get {
                return this.typecarField;
            }
            set {
                if ((object.ReferenceEquals(this.typecarField, value) != true)) {
                    this.typecarField = value;
                    this.RaisePropertyChanged("typecar");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TypeCarsWS.IServiceTypeCars")]
    public interface IServiceTypeCars {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/gettypecars", ReplyAction="http://tempuri.org/IServiceTypeCars/gettypecarsResponse")]
        WCFServicesTest.TypeCarsWS.typecars[] gettypecars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/gettypecars", ReplyAction="http://tempuri.org/IServiceTypeCars/gettypecarsResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.TypeCarsWS.typecars[]> gettypecarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/inserttypecar", ReplyAction="http://tempuri.org/IServiceTypeCars/inserttypecarResponse")]
        bool inserttypecar(WCFServicesTest.TypeCarsWS.typecars objtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/inserttypecar", ReplyAction="http://tempuri.org/IServiceTypeCars/inserttypecarResponse")]
        System.Threading.Tasks.Task<bool> inserttypecarAsync(WCFServicesTest.TypeCarsWS.typecars objtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/updatetypecar", ReplyAction="http://tempuri.org/IServiceTypeCars/updatetypecarResponse")]
        bool updatetypecar(WCFServicesTest.TypeCarsWS.typecars objtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/updatetypecar", ReplyAction="http://tempuri.org/IServiceTypeCars/updatetypecarResponse")]
        System.Threading.Tasks.Task<bool> updatetypecarAsync(WCFServicesTest.TypeCarsWS.typecars objtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/deletetypecar", ReplyAction="http://tempuri.org/IServiceTypeCars/deletetypecarResponse")]
        bool deletetypecar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/deletetypecar", ReplyAction="http://tempuri.org/IServiceTypeCars/deletetypecarResponse")]
        System.Threading.Tasks.Task<bool> deletetypecarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/gettypecarById", ReplyAction="http://tempuri.org/IServiceTypeCars/gettypecarByIdResponse")]
        WCFServicesTest.TypeCarsWS.typecars gettypecarById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTypeCars/gettypecarById", ReplyAction="http://tempuri.org/IServiceTypeCars/gettypecarByIdResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.TypeCarsWS.typecars> gettypecarByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceTypeCarsChannel : WCFServicesTest.TypeCarsWS.IServiceTypeCars, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceTypeCarsClient : System.ServiceModel.ClientBase<WCFServicesTest.TypeCarsWS.IServiceTypeCars>, WCFServicesTest.TypeCarsWS.IServiceTypeCars {
        
        public ServiceTypeCarsClient() {
        }
        
        public ServiceTypeCarsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceTypeCarsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceTypeCarsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceTypeCarsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFServicesTest.TypeCarsWS.typecars[] gettypecars() {
            return base.Channel.gettypecars();
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.TypeCarsWS.typecars[]> gettypecarsAsync() {
            return base.Channel.gettypecarsAsync();
        }
        
        public bool inserttypecar(WCFServicesTest.TypeCarsWS.typecars objtype) {
            return base.Channel.inserttypecar(objtype);
        }
        
        public System.Threading.Tasks.Task<bool> inserttypecarAsync(WCFServicesTest.TypeCarsWS.typecars objtype) {
            return base.Channel.inserttypecarAsync(objtype);
        }
        
        public bool updatetypecar(WCFServicesTest.TypeCarsWS.typecars objtype) {
            return base.Channel.updatetypecar(objtype);
        }
        
        public System.Threading.Tasks.Task<bool> updatetypecarAsync(WCFServicesTest.TypeCarsWS.typecars objtype) {
            return base.Channel.updatetypecarAsync(objtype);
        }
        
        public bool deletetypecar(int id) {
            return base.Channel.deletetypecar(id);
        }
        
        public System.Threading.Tasks.Task<bool> deletetypecarAsync(int id) {
            return base.Channel.deletetypecarAsync(id);
        }
        
        public WCFServicesTest.TypeCarsWS.typecars gettypecarById(int id) {
            return base.Channel.gettypecarById(id);
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.TypeCarsWS.typecars> gettypecarByIdAsync(int id) {
            return base.Channel.gettypecarByIdAsync(id);
        }
    }
}
