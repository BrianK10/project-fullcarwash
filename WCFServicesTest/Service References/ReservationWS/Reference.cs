//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServicesTest.ReservationWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="reservations", Namespace="http://schemas.datacontract.org/2004/07/wcf_fullcarwash")]
    [System.SerializableAttribute()]
    public partial class reservations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameLocalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idCustomer {
            get {
                return this.idCustomerField;
            }
            set {
                if ((this.idCustomerField.Equals(value) != true)) {
                    this.idCustomerField = value;
                    this.RaisePropertyChanged("idCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEmployee {
            get {
                return this.idEmployeeField;
            }
            set {
                if ((this.idEmployeeField.Equals(value) != true)) {
                    this.idEmployeeField = value;
                    this.RaisePropertyChanged("idEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idLocal {
            get {
                return this.idLocalField;
            }
            set {
                if ((this.idLocalField.Equals(value) != true)) {
                    this.idLocalField = value;
                    this.RaisePropertyChanged("idLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nameCustomer {
            get {
                return this.nameCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.nameCustomerField, value) != true)) {
                    this.nameCustomerField = value;
                    this.RaisePropertyChanged("nameCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nameEmployee {
            get {
                return this.nameEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.nameEmployeeField, value) != true)) {
                    this.nameEmployeeField = value;
                    this.RaisePropertyChanged("nameEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nameLocal {
            get {
                return this.nameLocalField;
            }
            set {
                if ((object.ReferenceEquals(this.nameLocalField, value) != true)) {
                    this.nameLocalField = value;
                    this.RaisePropertyChanged("nameLocal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReservationWS.IServiceReservation")]
    public interface IServiceReservation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/getreservation", ReplyAction="http://tempuri.org/IServiceReservation/getreservationResponse")]
        WCFServicesTest.ReservationWS.reservations[] getreservation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/getreservation", ReplyAction="http://tempuri.org/IServiceReservation/getreservationResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.ReservationWS.reservations[]> getreservationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/insertreservation", ReplyAction="http://tempuri.org/IServiceReservation/insertreservationResponse")]
        bool insertreservation(WCFServicesTest.ReservationWS.reservations objreserv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/insertreservation", ReplyAction="http://tempuri.org/IServiceReservation/insertreservationResponse")]
        System.Threading.Tasks.Task<bool> insertreservationAsync(WCFServicesTest.ReservationWS.reservations objreserv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/updatereservation", ReplyAction="http://tempuri.org/IServiceReservation/updatereservationResponse")]
        bool updatereservation(WCFServicesTest.ReservationWS.reservations objreserv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/updatereservation", ReplyAction="http://tempuri.org/IServiceReservation/updatereservationResponse")]
        System.Threading.Tasks.Task<bool> updatereservationAsync(WCFServicesTest.ReservationWS.reservations objreserv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/deletereservation", ReplyAction="http://tempuri.org/IServiceReservation/deletereservationResponse")]
        bool deletereservation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/deletereservation", ReplyAction="http://tempuri.org/IServiceReservation/deletereservationResponse")]
        System.Threading.Tasks.Task<bool> deletereservationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/getreservationById", ReplyAction="http://tempuri.org/IServiceReservation/getreservationByIdResponse")]
        WCFServicesTest.ReservationWS.reservations getreservationById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/getreservationById", ReplyAction="http://tempuri.org/IServiceReservation/getreservationByIdResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.ReservationWS.reservations> getreservationByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceReservationChannel : WCFServicesTest.ReservationWS.IServiceReservation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceReservationClient : System.ServiceModel.ClientBase<WCFServicesTest.ReservationWS.IServiceReservation>, WCFServicesTest.ReservationWS.IServiceReservation {
        
        public ServiceReservationClient() {
        }
        
        public ServiceReservationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceReservationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReservationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReservationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFServicesTest.ReservationWS.reservations[] getreservation() {
            return base.Channel.getreservation();
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.ReservationWS.reservations[]> getreservationAsync() {
            return base.Channel.getreservationAsync();
        }
        
        public bool insertreservation(WCFServicesTest.ReservationWS.reservations objreserv) {
            return base.Channel.insertreservation(objreserv);
        }
        
        public System.Threading.Tasks.Task<bool> insertreservationAsync(WCFServicesTest.ReservationWS.reservations objreserv) {
            return base.Channel.insertreservationAsync(objreserv);
        }
        
        public bool updatereservation(WCFServicesTest.ReservationWS.reservations objreserv) {
            return base.Channel.updatereservation(objreserv);
        }
        
        public System.Threading.Tasks.Task<bool> updatereservationAsync(WCFServicesTest.ReservationWS.reservations objreserv) {
            return base.Channel.updatereservationAsync(objreserv);
        }
        
        public bool deletereservation(int id) {
            return base.Channel.deletereservation(id);
        }
        
        public System.Threading.Tasks.Task<bool> deletereservationAsync(int id) {
            return base.Channel.deletereservationAsync(id);
        }
        
        public WCFServicesTest.ReservationWS.reservations getreservationById(int id) {
            return base.Channel.getreservationById(id);
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.ReservationWS.reservations> getreservationByIdAsync(int id) {
            return base.Channel.getreservationByIdAsync(id);
        }
    }
}
