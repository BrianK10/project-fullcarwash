//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServicesTest.EmployeesWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="employees", Namespace="http://schemas.datacontract.org/2004/07/wcf_fullcarwash")]
    [System.SerializableAttribute()]
    public partial class employees : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fullnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string numberdniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstnameField, value) != true)) {
                    this.firstnameField = value;
                    this.RaisePropertyChanged("firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fullname {
            get {
                return this.fullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.fullnameField, value) != true)) {
                    this.fullnameField = value;
                    this.RaisePropertyChanged("fullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool gender {
            get {
                return this.genderField;
            }
            set {
                if ((this.genderField.Equals(value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastnameField, value) != true)) {
                    this.lastnameField = value;
                    this.RaisePropertyChanged("lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string numberdni {
            get {
                return this.numberdniField;
            }
            set {
                if ((object.ReferenceEquals(this.numberdniField, value) != true)) {
                    this.numberdniField = value;
                    this.RaisePropertyChanged("numberdni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeesWS.IServiceEmployees")]
    public interface IServiceEmployees {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/getemployees", ReplyAction="http://tempuri.org/IServiceEmployees/getemployeesResponse")]
        WCFServicesTest.EmployeesWS.employees[] getemployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/getemployees", ReplyAction="http://tempuri.org/IServiceEmployees/getemployeesResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.EmployeesWS.employees[]> getemployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/insertemployee", ReplyAction="http://tempuri.org/IServiceEmployees/insertemployeeResponse")]
        bool insertemployee(WCFServicesTest.EmployeesWS.employees objemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/insertemployee", ReplyAction="http://tempuri.org/IServiceEmployees/insertemployeeResponse")]
        System.Threading.Tasks.Task<bool> insertemployeeAsync(WCFServicesTest.EmployeesWS.employees objemp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/updateemployee", ReplyAction="http://tempuri.org/IServiceEmployees/updateemployeeResponse")]
        bool updateemployee(WCFServicesTest.EmployeesWS.employees objem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/updateemployee", ReplyAction="http://tempuri.org/IServiceEmployees/updateemployeeResponse")]
        System.Threading.Tasks.Task<bool> updateemployeeAsync(WCFServicesTest.EmployeesWS.employees objem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/deleteemployee", ReplyAction="http://tempuri.org/IServiceEmployees/deleteemployeeResponse")]
        bool deleteemployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/deleteemployee", ReplyAction="http://tempuri.org/IServiceEmployees/deleteemployeeResponse")]
        System.Threading.Tasks.Task<bool> deleteemployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/getemployeeById", ReplyAction="http://tempuri.org/IServiceEmployees/getemployeeByIdResponse")]
        WCFServicesTest.EmployeesWS.employees getemployeeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/getemployeeById", ReplyAction="http://tempuri.org/IServiceEmployees/getemployeeByIdResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.EmployeesWS.employees> getemployeeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/getemployeeLogin", ReplyAction="http://tempuri.org/IServiceEmployees/getemployeeLoginResponse")]
        WCFServicesTest.EmployeesWS.employees getemployeeLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceEmployees/getemployeeLogin", ReplyAction="http://tempuri.org/IServiceEmployees/getemployeeLoginResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.EmployeesWS.employees> getemployeeLoginAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceEmployeesChannel : WCFServicesTest.EmployeesWS.IServiceEmployees, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceEmployeesClient : System.ServiceModel.ClientBase<WCFServicesTest.EmployeesWS.IServiceEmployees>, WCFServicesTest.EmployeesWS.IServiceEmployees {
        
        public ServiceEmployeesClient() {
        }
        
        public ServiceEmployeesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceEmployeesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEmployeesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEmployeesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFServicesTest.EmployeesWS.employees[] getemployees() {
            return base.Channel.getemployees();
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.EmployeesWS.employees[]> getemployeesAsync() {
            return base.Channel.getemployeesAsync();
        }
        
        public bool insertemployee(WCFServicesTest.EmployeesWS.employees objemp) {
            return base.Channel.insertemployee(objemp);
        }
        
        public System.Threading.Tasks.Task<bool> insertemployeeAsync(WCFServicesTest.EmployeesWS.employees objemp) {
            return base.Channel.insertemployeeAsync(objemp);
        }
        
        public bool updateemployee(WCFServicesTest.EmployeesWS.employees objem) {
            return base.Channel.updateemployee(objem);
        }
        
        public System.Threading.Tasks.Task<bool> updateemployeeAsync(WCFServicesTest.EmployeesWS.employees objem) {
            return base.Channel.updateemployeeAsync(objem);
        }
        
        public bool deleteemployee(int id) {
            return base.Channel.deleteemployee(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteemployeeAsync(int id) {
            return base.Channel.deleteemployeeAsync(id);
        }
        
        public WCFServicesTest.EmployeesWS.employees getemployeeById(int id) {
            return base.Channel.getemployeeById(id);
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.EmployeesWS.employees> getemployeeByIdAsync(int id) {
            return base.Channel.getemployeeByIdAsync(id);
        }
        
        public WCFServicesTest.EmployeesWS.employees getemployeeLogin(string email, string password) {
            return base.Channel.getemployeeLogin(email, password);
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.EmployeesWS.employees> getemployeeLoginAsync(string email, string password) {
            return base.Channel.getemployeeLoginAsync(email, password);
        }
    }
}
