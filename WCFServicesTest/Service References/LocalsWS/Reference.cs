//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServicesTest.LocalsWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="local", Namespace="http://schemas.datacontract.org/2004/07/wcf_fullcarwash")]
    [System.SerializableAttribute()]
    public partial class local : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string schedulesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string schedules {
            get {
                return this.schedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.schedulesField, value) != true)) {
                    this.schedulesField = value;
                    this.RaisePropertyChanged("schedules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocalsWS.IServiceLocals")]
    public interface IServiceLocals {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/getlocals", ReplyAction="http://tempuri.org/IServiceLocals/getlocalsResponse")]
        WCFServicesTest.LocalsWS.local[] getlocals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/getlocals", ReplyAction="http://tempuri.org/IServiceLocals/getlocalsResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.LocalsWS.local[]> getlocalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/insertlocal", ReplyAction="http://tempuri.org/IServiceLocals/insertlocalResponse")]
        bool insertlocal(WCFServicesTest.LocalsWS.local objloc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/insertlocal", ReplyAction="http://tempuri.org/IServiceLocals/insertlocalResponse")]
        System.Threading.Tasks.Task<bool> insertlocalAsync(WCFServicesTest.LocalsWS.local objloc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/updatelocal", ReplyAction="http://tempuri.org/IServiceLocals/updatelocalResponse")]
        bool updatelocal(WCFServicesTest.LocalsWS.local objlocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/updatelocal", ReplyAction="http://tempuri.org/IServiceLocals/updatelocalResponse")]
        System.Threading.Tasks.Task<bool> updatelocalAsync(WCFServicesTest.LocalsWS.local objlocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/deletelocal", ReplyAction="http://tempuri.org/IServiceLocals/deletelocalResponse")]
        bool deletelocal(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/deletelocal", ReplyAction="http://tempuri.org/IServiceLocals/deletelocalResponse")]
        System.Threading.Tasks.Task<bool> deletelocalAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/getlocalById", ReplyAction="http://tempuri.org/IServiceLocals/getlocalByIdResponse")]
        WCFServicesTest.LocalsWS.local getlocalById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocals/getlocalById", ReplyAction="http://tempuri.org/IServiceLocals/getlocalByIdResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.LocalsWS.local> getlocalByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceLocalsChannel : WCFServicesTest.LocalsWS.IServiceLocals, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceLocalsClient : System.ServiceModel.ClientBase<WCFServicesTest.LocalsWS.IServiceLocals>, WCFServicesTest.LocalsWS.IServiceLocals {
        
        public ServiceLocalsClient() {
        }
        
        public ServiceLocalsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceLocalsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLocalsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLocalsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFServicesTest.LocalsWS.local[] getlocals() {
            return base.Channel.getlocals();
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.LocalsWS.local[]> getlocalsAsync() {
            return base.Channel.getlocalsAsync();
        }
        
        public bool insertlocal(WCFServicesTest.LocalsWS.local objloc) {
            return base.Channel.insertlocal(objloc);
        }
        
        public System.Threading.Tasks.Task<bool> insertlocalAsync(WCFServicesTest.LocalsWS.local objloc) {
            return base.Channel.insertlocalAsync(objloc);
        }
        
        public bool updatelocal(WCFServicesTest.LocalsWS.local objlocal) {
            return base.Channel.updatelocal(objlocal);
        }
        
        public System.Threading.Tasks.Task<bool> updatelocalAsync(WCFServicesTest.LocalsWS.local objlocal) {
            return base.Channel.updatelocalAsync(objlocal);
        }
        
        public bool deletelocal(int id) {
            return base.Channel.deletelocal(id);
        }
        
        public System.Threading.Tasks.Task<bool> deletelocalAsync(int id) {
            return base.Channel.deletelocalAsync(id);
        }
        
        public WCFServicesTest.LocalsWS.local getlocalById(int id) {
            return base.Channel.getlocalById(id);
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.LocalsWS.local> getlocalByIdAsync(int id) {
            return base.Channel.getlocalByIdAsync(id);
        }
    }
}
