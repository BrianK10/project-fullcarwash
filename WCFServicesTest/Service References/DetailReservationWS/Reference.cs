//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServicesTest.DetailReservationWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="detailreservation", Namespace="http://schemas.datacontract.org/2004/07/wcf_fullcarwash")]
    [System.SerializableAttribute()]
    public partial class detailreservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double fullpaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idcarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idreservationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idserviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double priceserviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double pricetypecarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typecarField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double fullpayment {
            get {
                return this.fullpaymentField;
            }
            set {
                if ((this.fullpaymentField.Equals(value) != true)) {
                    this.fullpaymentField = value;
                    this.RaisePropertyChanged("fullpayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idcar {
            get {
                return this.idcarField;
            }
            set {
                if ((this.idcarField.Equals(value) != true)) {
                    this.idcarField = value;
                    this.RaisePropertyChanged("idcar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idreservation {
            get {
                return this.idreservationField;
            }
            set {
                if ((this.idreservationField.Equals(value) != true)) {
                    this.idreservationField = value;
                    this.RaisePropertyChanged("idreservation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idservice {
            get {
                return this.idserviceField;
            }
            set {
                if ((this.idserviceField.Equals(value) != true)) {
                    this.idserviceField = value;
                    this.RaisePropertyChanged("idservice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nameService {
            get {
                return this.nameServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.nameServiceField, value) != true)) {
                    this.nameServiceField = value;
                    this.RaisePropertyChanged("nameService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double priceservice {
            get {
                return this.priceserviceField;
            }
            set {
                if ((this.priceserviceField.Equals(value) != true)) {
                    this.priceserviceField = value;
                    this.RaisePropertyChanged("priceservice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double pricetypecar {
            get {
                return this.pricetypecarField;
            }
            set {
                if ((this.pricetypecarField.Equals(value) != true)) {
                    this.pricetypecarField = value;
                    this.RaisePropertyChanged("pricetypecar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string typecar {
            get {
                return this.typecarField;
            }
            set {
                if ((object.ReferenceEquals(this.typecarField, value) != true)) {
                    this.typecarField = value;
                    this.RaisePropertyChanged("typecar");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DetailReservationWS.IServiceDetailReservation")]
    public interface IServiceDetailReservation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/getdetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/getdetailreservationResponse")]
        WCFServicesTest.DetailReservationWS.detailreservation[] getdetailreservation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/getdetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/getdetailreservationResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.DetailReservationWS.detailreservation[]> getdetailreservationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/insertdetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/insertdetailreservationResponse")]
        bool insertdetailreservation(WCFServicesTest.DetailReservationWS.detailreservation objdetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/insertdetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/insertdetailreservationResponse")]
        System.Threading.Tasks.Task<bool> insertdetailreservationAsync(WCFServicesTest.DetailReservationWS.detailreservation objdetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/updatedetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/updatedetailreservationResponse")]
        bool updatedetailreservation(WCFServicesTest.DetailReservationWS.detailreservation objdetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/updatedetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/updatedetailreservationResponse")]
        System.Threading.Tasks.Task<bool> updatedetailreservationAsync(WCFServicesTest.DetailReservationWS.detailreservation objdetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/deletedetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/deletedetailreservationResponse")]
        bool deletedetailreservation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/deletedetailreservation", ReplyAction="http://tempuri.org/IServiceDetailReservation/deletedetailreservationResponse")]
        System.Threading.Tasks.Task<bool> deletedetailreservationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/getdetailreservationById", ReplyAction="http://tempuri.org/IServiceDetailReservation/getdetailreservationByIdResponse")]
        WCFServicesTest.DetailReservationWS.detailreservation getdetailreservationById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDetailReservation/getdetailreservationById", ReplyAction="http://tempuri.org/IServiceDetailReservation/getdetailreservationByIdResponse")]
        System.Threading.Tasks.Task<WCFServicesTest.DetailReservationWS.detailreservation> getdetailreservationByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceDetailReservationChannel : WCFServicesTest.DetailReservationWS.IServiceDetailReservation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceDetailReservationClient : System.ServiceModel.ClientBase<WCFServicesTest.DetailReservationWS.IServiceDetailReservation>, WCFServicesTest.DetailReservationWS.IServiceDetailReservation {
        
        public ServiceDetailReservationClient() {
        }
        
        public ServiceDetailReservationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceDetailReservationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDetailReservationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDetailReservationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFServicesTest.DetailReservationWS.detailreservation[] getdetailreservation() {
            return base.Channel.getdetailreservation();
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.DetailReservationWS.detailreservation[]> getdetailreservationAsync() {
            return base.Channel.getdetailreservationAsync();
        }
        
        public bool insertdetailreservation(WCFServicesTest.DetailReservationWS.detailreservation objdetail) {
            return base.Channel.insertdetailreservation(objdetail);
        }
        
        public System.Threading.Tasks.Task<bool> insertdetailreservationAsync(WCFServicesTest.DetailReservationWS.detailreservation objdetail) {
            return base.Channel.insertdetailreservationAsync(objdetail);
        }
        
        public bool updatedetailreservation(WCFServicesTest.DetailReservationWS.detailreservation objdetail) {
            return base.Channel.updatedetailreservation(objdetail);
        }
        
        public System.Threading.Tasks.Task<bool> updatedetailreservationAsync(WCFServicesTest.DetailReservationWS.detailreservation objdetail) {
            return base.Channel.updatedetailreservationAsync(objdetail);
        }
        
        public bool deletedetailreservation(int id) {
            return base.Channel.deletedetailreservation(id);
        }
        
        public System.Threading.Tasks.Task<bool> deletedetailreservationAsync(int id) {
            return base.Channel.deletedetailreservationAsync(id);
        }
        
        public WCFServicesTest.DetailReservationWS.detailreservation getdetailreservationById(int id) {
            return base.Channel.getdetailreservationById(id);
        }
        
        public System.Threading.Tasks.Task<WCFServicesTest.DetailReservationWS.detailreservation> getdetailreservationByIdAsync(int id) {
            return base.Channel.getdetailreservationByIdAsync(id);
        }
    }
}
